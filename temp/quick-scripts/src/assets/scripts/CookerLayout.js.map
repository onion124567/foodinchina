{"version":3,"sources":["assets\\scripts\\CookerLayout.js"],"names":["cc","Class","Layout","properties","picNum","isCheck","sprite","type","SpriteFrame","titleView","Label","contentView","btnView","Button","start","setPicNum","console","log","onLoad","node","on","onMouseDown","self","resources","load","SpriteAtlas","err","atlas","frame","getSpriteFrame","getComponent","Sprite","spriteFrame","onDestroy","off","event","stopPropagation"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,MADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAC,KADC;AAERC,IAAAA,OAAO,EAAC,KAFA;AAGRC,IAAAA,MAAM,EAAE;AACJ,iBAAS,IADL;AAEJC,MAAAA,IAAI,EAAEP,EAAE,CAACQ;AAFL,KAHA;AAORC,IAAAA,SAAS,EAAE;AACP,iBAAS,IADF;AAEPF,MAAAA,IAAI,EAAEP,EAAE,CAACU;AAFF,KAPH;AAWRC,IAAAA,WAAW,EAAE;AACT,iBAAS,IADA;AAETJ,MAAAA,IAAI,EAAEP,EAAE,CAACU;AAFA,KAXL;AAeRE,IAAAA,OAAO,EAAE;AACL,iBAAS,IADJ;AAELL,MAAAA,IAAI,EAAEP,EAAE,CAACa;AAFJ;AAfD,GAHP;AAuBLC,EAAAA,KAAK,EAAE,iBAAY,CAEf;AACA;AAEA;AACA;AAGH,GAhCI;AAkCLC,EAAAA,SAlCK,qBAkCKX,MAlCL,EAkCY;AACbY,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkBb,MAA9B;AACA,SAAKA,MAAL,GAAYA,MAAZ;AACH,GArCI;AAuCL;AACA;AAEAc,EAAAA,MAAM,EAAE,kBAAY;AAChB;AACA;AACA;AACA,SAAKC,IAAL,CAAUC,EAAV,CAAa,WAAb,EAA0B,KAAKC,WAA/B,EAA2C,IAA3C;AAEA,QAAIC,IAAI,GAAC,IAAT;AACAtB,IAAAA,EAAE,CAACuB,SAAH,CAAaC,IAAb,CAAkB,QAAlB,EAA4BxB,EAAE,CAACyB,WAA/B,EAA4C,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAE9D,UAAIC,KAAK,GAAGD,KAAK,CAACE,cAAN,CAAqBP,IAAI,CAAClB,MAA1B,CAAZ,CAF8D,CAI9D;;AACAkB,MAAAA,IAAI,CAACQ,YAAL,CAAkB9B,EAAE,CAAC+B,MAArB,EAA6BC,WAA7B,GAA0CJ,KAA1C,CAL8D,CAM9D;AACH,KAPD;AAQH,GAzDI;AA2DLK,EAAAA,SA3DK,uBA2DQ;AACT;AAEA,SAAKd,IAAL,CAAUe,GAAV,CAAc,WAAd,EAA2B,KAAKb,WAAhC,EAA6C,IAA7C;AACH,GA/DI;AAiELA,EAAAA,WAAW,EAAE,qBAAUc,KAAV,EAAiB;AAC1BnB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAkB,IAAAA,KAAK,CAACC,eAAN,GAF0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;AA5EI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Layout,\r\n\r\n    properties: {\r\n        picNum:\"181\",\r\n        isCheck:false,\r\n        sprite: {\r\n            default: null,\r\n            type: cc.SpriteFrame,\r\n        },\r\n        titleView: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        contentView: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        btnView: {\r\n            default: null,\r\n            type: cc.Button,\r\n        },\r\n    },\r\n    start: function () {\r\n\r\n        // var node = new cc.Node('Sprite');\r\n        // var sp = node.addComponent(cc.Sprite);\r\n\r\n        // sp.spriteFrame = cardPic;\r\n        // node.parent = this.node;\r\n\r\n\r\n    },\r\n\r\n    setPicNum(picNum){\r\n        console.log(\"onion setPicNum\"+picNum);\r\n        this.picNum=picNum;\r\n    },\r\n\r\n    // update: function (dt) {\r\n    // },\r\n\r\n    onLoad: function () {\r\n        // add key down and key up event\r\n        // let picNum=this.game.getPicNum();\r\n        // cc.systemEvent.on();\r\n        this.node.on(\"mousedown\", this.onMouseDown,this);\r\n\r\n        let self=this;\r\n        cc.resources.load(\"pokers\", cc.SpriteAtlas, function (err, atlas) {\r\n\r\n            var frame = atlas.getSpriteFrame(self.picNum);\r\n\r\n            // console.log('onion==='+self.getComponent(cc.Sprite));\r\n            self.getComponent(cc.Sprite).spriteFrame =frame\r\n            // this.spriteFrame= frame;\r\n        });\r\n    },\r\n\r\n    onDestroy () {\r\n        // cc.systemEvent.off(\"mousedown\", this.onMouseDown);\r\n\r\n        this.node.off('mousedown', this.onMouseDown, this);\r\n    },\r\n\r\n    onMouseDown: function (event) {\r\n        console.log('Press a key');\r\n        event.stopPropagation();\r\n        // if(this.isCheck){\r\n        //     this.isCheck=false;\r\n        //     this.node.y=this.node.y-50;\r\n        // }else{\r\n        //     this.isCheck=true;\r\n        //     this.node.y=this.node.y+50;\r\n        // }\r\n\r\n    },\r\n\r\n\r\n});"]}